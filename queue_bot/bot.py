import os
import telebot
from telebot import types
import psycopg2
from configparser import ConfigParser
import datetime
import data_storage as db
# using now() to get current time
current_time = datetime.datetime.now()
 

first = 0
API_TOKEN = '6042118462:AAFSsuIPOcaRocGuT9ImTnuaR8yXgy-_7e0'
bot = telebot.TeleBot (API_TOKEN)



class Subject:
    def __init__(self, id, name):
        self.id = id
        self.name = name

def config(filename='../configs/database.ini', section='postgresql'):
    parser = ConfigParser()
    parser.read(filename)

    db = {}
    if parser.has_section(section):
        params = parser.items(section)
        for param in params:
            db[param[0]] = param[1]
    else:
        raise Exception('Section {0} not found in the {1} file'.format(section, filename))

    return db

def connectDB():
    """ Connect to the PostgreSQL database server """
    conn = None
    try:
        params = config()
        print('Connecting to the PostgreSQL database...')
        conn = psycopg2.connect(**params)
        # create a cursor
        cur = conn.cursor()
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
    return conn, cur
    

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü—Ä–∏–≤–µ—Ç, –∑–∞–ø–∏—à–∏ –º–µ–Ω—è –≤ –æ—á–µ—Ä–µ–¥—å")
    markup.add(btn1)
    bot.send_message(message.from_user.id, "üëã - –ü—Ä–∏–≤–µ—Ç, –Ø - –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ —Å–¥–∞—á—É –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç! –î–ª—è –∑–∞–ø–∏—Å–∏ –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", reply_markup=markup)

@bot.message_handler(commands=['help'])
def start(message):
    bot.send_message(message.from_user.id, "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å—Ç—É–¥–µ–Ω—Ç—ã –º–æ–≥–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –æ—á–µ—Ä–µ–¥—å –Ω–∞ —Å–¥–∞—á—É –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç!\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ /start")

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == 'üëã –ü—Ä–∏–≤–µ—Ç, –∑–∞–ø–∏—à–∏ –º–µ–Ω—è –≤ –æ—á–µ—Ä–µ–¥—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–í–æ–π—Ç–∏ –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫')
        markup.add(btn1)
        bot.send_message(message.from_user.id, '‚ùó–î–ª—è –∑–∞–ø–∏—Å–∏ –≤ –æ—á–µ—Ä–µ–¥—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–º –¥–Ω–µ–≤–Ω–∏–∫–µ —Å—Ç—É–¥–µ–Ω—Ç–∞', reply_markup=markup)
    elif message.text == '–í–æ–π—Ç–∏ –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫':
        bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:')
        conn, cur = connectDB()
        print('PostgreSQL user table:')
        cur.execute('SELECT * from Users')
        usrs = cur.fetchall()
        for user in usrs:
            db.usersset.add(user[1])
        print('PostgreSQL subject table:')
        cur.execute('SELECT SubjectID, Description from Subject')
        subjects = cur.fetchall()
        for s in subjects:
            print(s)
            subj = Subject(s[0], s[1])
            db.subj_set.add(subj)
        cur.close()
        conn.close()
    elif message.text in db.usersset and not db.auth:
        print(message.text)
        print(message.text in db.usersset)
        db.auth = True
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for s in db.subj_set:
            btn1 = types.KeyboardButton(s.name)
            markup.add(btn1)
        bot.send_message(message.from_user.id, '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –í—ã–±–µ—Ä–µ—Ç–µ –ø—Ä–µ–¥–º–µ—Ç, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –í—ã —Å–¥–∞–µ—Ç–µ —Ä–∞–±–æ—Ç—É', reply_markup=markup)
        
    elif message.text not in db.usersset and not db.auth:
        print(message.text in db.usersset)
        print(db.usersset)
        bot.send_message(message.from_user.id, '–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–º –¥–Ω–µ–≤–Ω–∏–∫–µ.\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –±—ã—Ç—å –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å.')
         
    elif message.text == '–°–æ–≤–µ—Ç—ã –ø–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –ø—É–±–ª–∏–∫–∞—Ü–∏–∏':
        bot.send_message(message.from_user.id, '–ü–æ–¥—Ä–æ–±–Ω–æ –ø—Ä–æ —Å–æ–≤–µ—Ç—ã –ø–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –ø—É–±–ª–∏–∫–∞—Ü–∏–π –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø–æ ' + '[—Å—Å—ã–ª–∫–µ](https://habr.com/ru/docs/companies/design/)', parse_mode='Markdown')


if __name__ == '__main__':
    
    # Printing value of now.
    print("Time now at greenwich meridian is:", current_time)
    bot.polling(none_stop=True, interval=0) #–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —á–∞—Å—Ç—å
